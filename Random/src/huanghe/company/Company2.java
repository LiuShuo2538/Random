package huanghe.company;

/**
 * Created by ${LiuShuo} on 2016/7/7.
 */


public class Company2{
    public static Object getM(Object value, Object key){

        //判断参数是否为null、"null"、"" ,为true时不做处理
        if (value==null||value.equals("null")||value.equals("")) return "";
        String str = value+"";
        str = str.replace(" ", "");
        if (str.length()<2)return value;
        String salt = key + "";
        String saltok = salt.replace(" ", "");
        //盐值hash
        int hashSalt = 0;

        if (salt.length()<1){
            //没有盐值
        }else {
            hashSalt=Math.abs(saltok.hashCode());
        }

        /*  公司名 */
        String[] Surname= {"修","宵","晨","戏","施","顺","祥","才","聪","银","戈","喻","声","生","铁","如","宸","誓","胜","挚","靖","齐",
                "锦","少","舟","任","载","翱","青","迁","钧","钟","金","慈","昌","紫","砂","仁","祖","韶","绍","锐","峻","裕","镇","壮","商",
                "翼","织","释","诚","常","净","秀","节","刊","信","崇","春","铭","秋","刚","诗","神","星","鉴","石","识","肃","瑞","新","鑫",
                "盛","帅","馨","惜","散","慎","世","书","千","善","镜","然","资","笑","疏","西","捷","超","川","锋","实","聚","尊","承","钦",
                "仕","众","思","茂","贤","棕","树","蓝","卷","谷","君","古","原","廉","建","庆","桦","统","若","攀","栋","荒","何","久","侠",
                "奇","朴","鸽","东","嘉","冠","松","啸","祺","琪","雁","宜","琦","枝","坚","昂","毅","歌","标","固","吉","高","康","尧","果",
                "杭","语","曲","肖","荷","芹","乾","义","杰","皓","凯","狂","本","勤","彬","景","月","兼","顷","柏","擎","荣","观","笃","恭",
                "柯","言","菲","萧","乔","群","谦","国","极","轻","玉","业","材","相","苑","倚","岳","柳","贵","悟","健","彦","棋","楷","桐",
                "气","颜","苛","池","闻","流","霜","福","泉","宏","弘","浅","熙","济","涛","震","和","闲","霖","向","波","渊","博","游","雨",
                "润","湛","凡","奔","夫","潮","深","岸","辉","浚","复","封","飞","朋","江","奉","晖","绘","浪","鸣","百","鹤","沙","漾","泥",
                "雪","孝","万","望","瀚","缈","淡","阜","保","阔","洪","恒","云","伯","玄","风","淘","合","文","莫","享","满","溪","妙","邦",
                "华","冰","方","寒","鹏","陌","奋","秉","泽","豪","布","明","民","虎","帆","洋","名","拂","海","潭","清","勉","源","平","物",
                "沧","霄","熊","论","彤","烟","阳","耀","励","晋","临","伦","日","传","炎","彰","全","丰","晓","瞻","拓","展","绩","炫","尘",
                "征","昙","道","飘","鼎","龙","昊","腾","至","宝","驰","易","耿","昆","振","知","光","灿","智","畅","晴","迪","绿","扬","来",
                "志","煊","遥","宁","衷","太","凌","天","璋","瑾","俊","里","韬","量","致","烨","忠","厉","理","路","年","循","昭","达","都",
                "蝶","章","照","积","良","泰","烈","庭","折","进","晟","德","际","琢","利","哲","质","隆","田","煜","南","乐","翎","冬","图",
                "暖","壤","佑","翔","伟","磊","欧","运","豫","维","坤","恩","永","意","野","幽","远","圣","山","城","音","韵","依","余","圆",
                "勋","忆","叶","亦","卫","傲","融","勇","逸","育","唯","基","容","温","安","奥","引","影","羽","均","誉","越","辰","轩","延",
                "境","宇","悠","益","岩","玮","威","硕","庸","懿","统","柏","彤","兼","昊","肖","杰","含","凯","振","秉","沧","享","朋","轻",
                "俊","材","宇","松","依","池","钦","桦","芹","孝","炫","极","洋","舟","际","荒","衷","亦","狂","闻","幽","曲","耿","勇","奇",
                "城","冰","柯","浦","林","和","明","名","建","尧","胜","朴","存","顺","昌","西","昙","砂","语","泰","伦","烈","杭","育","折",
                "达","顷","忠","延","坤","佑","修","闲","坚","泉","劲","勋","枝","年","迁","致","治","健","羽","晓","卷","如","宸","荷","物",
                "合","复","晖","易","灿","浅","悟","壮","临","荣","桦","乔","承","明","顺","物","原","统","哲","庭","运","修","远","峰","兼",
                "杉","莫","均","幽","高","闲","宝","拓","若","材","玮","余","苛","欢","凌","函","享","陌","亦","旷","全","君","思","秀","威",
                "海","烨","尧","声","展","秋","标","羽","昭","合","建","坤","南","利","华","伦","挚","宵","壮","众","晋","松","恩","阳","泉",
                "恭","树","钟","致","苑","封","诗","晓","戏","荣","里","拂","至","奋","初","图","烈","金","如","钦","俊","贵","宸","狂","益",
                "耿","积","复","勋","佑","肃","光","轻","施","任"};

        String[] noChange = {"瓜果","流通","专业","中卫","中心","二手","互助社","交通","保洁","公司","养殖","内蒙古","农村","农民","制造","副食品","南寺","发展","合作社","吴忠","商业","园林","固原","宁夏","实业","家私","小额","工程","批发部","支行","景观","有限","服务","村级","果蔬","清真","清真寺","物资","石嘴山","种植","管理","经营部","经销部","股份","自治县","苗木","蒙古族","贷款","资产","资金","车行","银川","银行","陶瓷","集团","青铜峡","餐饮"
        };
        String[] noChange1 = {"镇","乡","村","市","县","区"
        };
        String[] noChange2 = {"瓜果","流通","专业","中卫","中心","二手","交通","保洁","公司","养殖","农村","农民","制造","南寺","发展","吴忠","商业","园林","固原","宁夏","实业","家私","小额","工程","支行","景观","有限","服务","村级","果蔬","清真","物资","种植","管理","股份","苗木","贷款","资产","资金","车行","银川","银行","陶瓷","集团","餐饮"
        };
        String[] noChange3 = {"互助社","内蒙古","副食品","合作社","批发部","清真寺","石嘴山","经营部","经销部","自治县","蒙古族","青铜峡"};

        String newName="";

        //验证是否为公司
        int company = 0;

        for (int i = 0; i < noChange.length; i++) {
            if (str.contains(noChange[i])){
                company =1;
                break;
            }
        }
        if (company == 0)return value;

        String[] arrStr = new String [str.length()];
        for (int i = 0; i <arrStr.length ; i++) {
            arrStr[i] = str.substring(i,i+1);
        }

        for (int i = 0; i < arrStr.length; i++) {
            int temp = 0;
            try {
                for (int j = 0; j < noChange3.length; j++) {
                    if (arrStr[i].contains(noChange3[j].substring(0,1)) && arrStr[i + 1].contains(noChange3[j].substring(1,2)) && arrStr[i + 2].contains(noChange3[j].substring(2,3))){
                        i+=2;
                        temp = 1;
                        break;
                    }
                }
            }catch (ArrayIndexOutOfBoundsException e){
                i+=2;
                continue;
            }
            try {
                for (int j = 0; j < noChange2.length; j++) {
                    if (arrStr[i].contains(noChange2[j].substring(0,1)) && arrStr[i + 1].contains(noChange2[j].substring(1,2))){
                        i+=1;
                        temp = 1;
                        break;
                    }
                }
            }catch (ArrayIndexOutOfBoundsException e){
                i+=1;
                continue;
            }
            for (int j = 0; j < noChange1.length; j++) {
                if (arrStr[i].contains(noChange1[j])) {
                    temp = 1;
                    break;
                }
            }
            if (temp == 0){
                int hashTemp = Math.abs(arrStr[i].hashCode()+hashSalt);
                arrStr[i] = Surname[hashTemp % (Surname.length - 1)];
            }


        }
        for (int i = 0; i <arrStr.length ; i++) {
            newName+=arrStr[i];
        }

        return newName;





    }

    public static Object getR(Object value, Object key){
        return "";
    }
}

